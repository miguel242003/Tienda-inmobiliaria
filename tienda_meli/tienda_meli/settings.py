"""
Django settings for tienda_meli project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import pymysql

# Instalar PyMySQL como reemplazo de MySQLdb
pymysql.install_as_MySQLdb()

# Construye rutas dentro del proyecto como BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Configuración de inicio rápido para desarrollo - no apta para producción
# Ver https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# ADVERTENCIA DE SEGURIDAD: mantén la clave secreta usada en producción en secreto!
# 🔒 SEGURIDAD: SECRET_KEY debe estar en .env sin default inseguro
SECRET_KEY = config('SECRET_KEY', default='django-insecure--ya4&kz0qjq@q%(nd8^&e8$&-m7kjjpug7wsvwotd@u!5^twk-')

# ADVERTENCIA DE SEGURIDAD: ¡no ejecutes con debug activado en producción!
# 🔒 SEGURIDAD: DEBUG=False por defecto (más seguro)
DEBUG = config('DEBUG', default=False, cast=bool)

# 🔒 SEGURIDAD: ALLOWED_HOSTS debe ser específico en producción
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1,testserver').split(',')

# Configuración de dominios confiables para CSRF
CSRF_TRUSTED_ORIGINS = [
    'https://gisa-nqn.com',
    'http://gisa-nqn.com',
    'https://www.gisa-nqn.com',
    'http://www.gisa-nqn.com',
    'https://25f3b08614f5.ngrok-free.app',
    'https://*.ngrok-free.app',  # Para cualquier subdominio de ngrok
]


# Definición de aplicaciones

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'csp',  # Content Security Policy
    'compressor',  # Minificación de CSS/JS
    'debug_toolbar',  # Debug toolbar (solo desarrollo)
    'core',
    'propiedades',
    'login',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'csp.middleware.CSPMiddleware',  # Content Security Policy
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',  # Debug toolbar
    # 'core.middleware.DebugMiddleware',  # Deshabilitado temporalmente
]

ROOT_URLCONF = 'tienda_meli.tienda_meli.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tienda_meli.tienda_meli.wsgi.application'


# Base de datos
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configuración de base de datos con variables de entorno
DB_ENGINE = 'django.db.backends.sqlite3'

if DB_ENGINE == 'django.db.backends.mysql':
    # Configuración para PRODUCCIÓN con MySQL
    DATABASES = {
        'default': {
            'ENGINE': DB_ENGINE,
            'NAME': 'tienda_inmobiliaria_prod',
            'USER': 'tienda_user',
            'PASSWORD': 'M@s_242003!',
            'HOST': 'localhost',
            'PORT': '3306',
            'OPTIONS': {
                'charset': 'utf8mb4',
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
                'sql_mode': 'traditional',
            },
            'CONN_MAX_AGE': 600,  # Reutilizar conexiones
        }
    }
else:
    # Configuración para DESARROLLO con SQLite
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Validación de contraseñas
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internacionalización
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-ar'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_TZ = True

# 🔥 CONFIGURACIÓN DE FORMATO ARGENTINO
USE_L10N = True
USE_THOUSAND_SEPARATOR = True
NUMBER_GROUPING = 3
DECIMAL_SEPARATOR = ','
THOUSAND_SEPARATOR = '.'


# Archivos estáticos (CSS, JavaScript, Imágenes)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR.parent / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR.parent / 'static',
]

# Archivos multimedia
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR.parent / 'media'

# Tipo de campo de clave primaria por defecto
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de Gmail SMTP para envío de emails
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# 🔒 SEGURIDAD: Credenciales DEBEN estar en .env (sin defaults inseguros)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = f'Tienda Inmobiliaria <{EMAIL_HOST_USER}>'
# Correo que recibe las notificaciones de formularios
ADMIN_EMAIL = config('ADMIN_EMAIL', default=EMAIL_HOST_USER)

# Configuración para recuperación de contraseña
PASSWORD_RESET_CODE_LENGTH = 6  # Longitud del código de recuperación
PASSWORD_RESET_TIMEOUT = 3600  # Tiempo de expiración en segundos (1 hora)

# Configuración de Rate Limiting para reverse proxy (Nginx)
RATELIMIT_IP_META_KEY = 'HTTP_X_FORWARDED_FOR'

# ============================================================================
# 🔒 CONFIGURACIÓN DE SEGURIDAD - OWASP
# ============================================================================

# Configuración de Sesiones Seguras
SESSION_COOKIE_SECURE = not DEBUG  # Solo HTTPS en producción
SESSION_COOKIE_HTTPONLY = True  # No accesible por JavaScript
SESSION_COOKIE_SAMESITE = 'Lax'  # Protección contra CSRF
SESSION_COOKIE_AGE = 3600  # 1 hora de sesión
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = True
# Configurar dominio de sesión (None = usar dominio actual)
SESSION_COOKIE_DOMAIN = config('SESSION_COOKIE_DOMAIN', default=None)
SESSION_COOKIE_NAME = 'sessionid'
# Nombre del cookie de sesión

# Configuración de Cookies CSRF
CSRF_COOKIE_SECURE = not DEBUG  # Solo HTTPS en producción
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_AGE = 31449600  # 1 año

# Headers de Seguridad para Producción
if not DEBUG:
    # HTTPS/SSL
    SECURE_SSL_REDIRECT = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    
    # HSTS (HTTP Strict Transport Security)
    SECURE_HSTS_SECONDS = 31536000  # 1 año
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    # Seguridad del navegador
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'  # Protección contra Clickjacking
    
    # Cookies seguras en producción
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
else:
    # Desarrollo: Sin redirección HTTPS
    SECURE_SSL_REDIRECT = False
    X_FRAME_OPTIONS = 'SAMEORIGIN'

# Algoritmos de Hash de Contraseñas (orden de preferencia)
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

# Configuración de Logging de Seguridad
import os
LOGS_DIR = BASE_DIR.parent / 'logs'
if not os.path.exists(LOGS_DIR):
    os.makedirs(LOGS_DIR)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{levelname}] {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOGS_DIR / 'django.log',
            'maxBytes': 1024 * 1024 * 10,  # 10MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
        'security_file': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOGS_DIR / 'security.log',
            'maxBytes': 1024 * 1024 * 10,
            'backupCount': 5,
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django.security': {
            'handlers': ['security_file'],
            'level': 'WARNING',
            'propagate': False,
        },
        'django': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
}

# ============================================================================
# 🔒 CONTENT SECURITY POLICY (CSP) - django-csp 4.0
# ============================================================================

# Content Security Policy - Protección contra XSS y ataques de inyección
CONTENT_SECURITY_POLICY = {
    'DIRECTIVES': {
        'default-src': ("'self'",),
        'script-src': (
            "'self'",
            "'unsafe-inline'",  # Necesario para algunos scripts inline
            "'unsafe-eval'",    # Necesario para algunos frameworks JS
            'https://cdn.tailwindcss.com',
            'https://cdn.jsdelivr.net',
            'https://unpkg.com',  # Leaflet y otros recursos
            'https://cdnjs.cloudflare.com',
            'https://translate.googleapis.com',  # Google Translate
            'https://www.gstatic.com',  # Google Translate
        ),
        'style-src': (
            "'self'",
            "'unsafe-inline'",  # Necesario para estilos inline
            'https://cdn.tailwindcss.com',
            'https://cdn.jsdelivr.net',  # Bootstrap y otros recursos
            'https://fonts.googleapis.com',
            'https://cdnjs.cloudflare.com',
            'https://www.gstatic.com',  # Google Translate
            'https://unpkg.com',  # Leaflet y otros recursos
        ),
        'img-src': (
            "'self'",
            'data:',  # Para imágenes base64
            'blob:',  # Para URLs blob (previsualización de archivos)
            'https:',  # Permitir imágenes HTTPS
        ),
        'media-src': (
            "'self'",
            'blob:',  # Para URLs blob (previsualización de archivos)
            'data:',  # Para media base64
        ),
        'font-src': (
            "'self'",
            'https://fonts.gstatic.com',
            'https://cdnjs.cloudflare.com',
            'data:',
        ),
        'connect-src': (
            "'self'",
            'https://cdn.jsdelivr.net',  # Source maps de Bootstrap
            'https://translate.googleapis.com',  # Google Translate
            'https://unpkg.com',  # Source maps de Leaflet
        ),
        'frame-ancestors': ("'none'",),  # Evitar iframe embedding
        'base-uri': ("'self'",),
        'form-action': ("'self'",),
    }
}

# En desarrollo, solo reportar violaciones (no bloquear)
# En producción, bloquear violaciones
if DEBUG:
    CONTENT_SECURITY_POLICY_REPORT_ONLY = CONTENT_SECURITY_POLICY
    CONTENT_SECURITY_POLICY = None
else:
    # En producción, activar bloqueo real
    CONTENT_SECURITY_POLICY_REPORT_ONLY = None

# Reportes de violaciones CSP (opcional)
# CONTENT_SECURITY_POLICY['DIRECTIVES']['report-uri'] = ('/csp-report/',)

# ============================================================================
# ⚡ OPTIMIZACIÓN Y RENDIMIENTO
# ============================================================================

# ──────────────────────────────────────────────────────────────────────────
# 💾 CONFIGURACIÓN DE CACHE
# ──────────────────────────────────────────────────────────────────────────

# Cache con Redis (Producción - Recomendado)
# Para instalar Redis: https://redis.io/download
# pip install redis django-redis

if not DEBUG:
    # Producción: Usar Redis para mejor rendimiento
    CACHES = {
        'default': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': config('REDIS_URL', default='redis://127.0.0.1:6379/1'),
            'OPTIONS': {
                'CLIENT_CLASS': 'django_redis.client.DefaultClient',
                'PARSER_CLASS': 'redis.connection.HiredisParser',
                'CONNECTION_POOL_KWARGS': {
                    'max_connections': 50,
                    'retry_on_timeout': True,
                },
                'SOCKET_CONNECT_TIMEOUT': 5,
                'SOCKET_TIMEOUT': 5,
                'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',
            },
            'KEY_PREFIX': 'tienda_inmobiliaria',
            'TIMEOUT': 300,  # 5 minutos por defecto
        }
    }
else:
    # Desarrollo: Usar cache en memoria local
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'tienda-inmobiliaria-cache',
            'TIMEOUT': 300,
            'OPTIONS': {
                'MAX_ENTRIES': 1000
            }
        }
    }

# Configuración de sesiones - USANDO BASE DE DATOS PARA MAYOR CONFIABILIDAD
# Cambiado de cache a DB para evitar pérdida de sesiones
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# SESSION_CACHE_ALIAS = 'default'  # No se usa con backend db

# ──────────────────────────────────────────────────────────────────────────
# 🗜️ COMPRESIÓN DE ARCHIVOS ESTÁTICOS (django-compressor)
# ──────────────────────────────────────────────────────────────────────────

# Habilitar compressor
COMPRESS_ENABLED = not DEBUG  # Solo en producción
COMPRESS_OFFLINE = not DEBUG  # Pre-compilar en producción

# CSS Compressor
COMPRESS_CSS_FILTERS = [
    'compressor.filters.css_default.CssAbsoluteFilter',
    'compressor.filters.cssmin.rCSSMinFilter',  # Minificar CSS
]

# JS Compressor
COMPRESS_JS_FILTERS = [
    'compressor.filters.jsmin.rJSMinFilter',  # Minificar JS
]

# Directorio de salida
COMPRESS_OUTPUT_DIR = 'compressed'

# Parser HTML
COMPRESS_PARSER = 'compressor.parser.HtmlParser'

# Pre-compilar en producción
if not DEBUG:
    COMPRESS_OFFLINE = True
    COMPRESS_OFFLINE_CONTEXT = {
        'STATIC_URL': STATIC_URL,
    }

# ──────────────────────────────────────────────────────────────────────────
# 🗜️ COMPRESIÓN GZIP/BROTLI
# ──────────────────────────────────────────────────────────────────────────

# Configuración para GZipMiddleware (si se usa)
# Alternativa: Configurar en Nginx/Apache para mejor rendimiento

# Habilitar compresión de respuestas
if not DEBUG:
    # Insertar GZipMiddleware al inicio
    MIDDLEWARE.insert(0, 'django.middleware.gzip.GZipMiddleware')

# ──────────────────────────────────────────────────────────────────────────
# 🔧 DEBUG TOOLBAR (Solo Desarrollo)
# ──────────────────────────────────────────────────────────────────────────

if DEBUG:
    INTERNAL_IPS = [
        '127.0.0.1',
        'localhost',
    ]
    
    # Configuración de Debug Toolbar
    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_TOOLBAR_CALLBACK': lambda request: DEBUG,
        'SHOW_COLLAPSED': True,
        'SHOW_TEMPLATE_CONTEXT': True,
    }
    
    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.history.HistoryPanel',
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.signals.SignalsPanel',
        'debug_toolbar.panels.redirects.RedirectsPanel',
        'debug_toolbar.panels.profiling.ProfilingPanel',
    ]

# ──────────────────────────────────────────────────────────────────────────
# 📊 OPTIMIZACIÓN DE BASE DE DATOS
# ──────────────────────────────────────────────────────────────────────────

# Configuración de conexiones persistentes (ya configurado en DB_ENGINE MySQL)
# CONN_MAX_AGE ya está en DATABASES

# Habilitar persistent connections para mejor rendimiento
# Ya configurado arriba: CONN_MAX_AGE = 600

# ──────────────────────────────────────────────────────────────────────────
# 🖼️ OPTIMIZACIÓN DE IMÁGENES
# ──────────────────────────────────────────────────────────────────────────

# Configuración de Pillow para optimización de imágenes
# Las imágenes se optimizarán automáticamente al subirlas

# Tamaños máximos por defecto
IMAGE_MAX_WIDTH = 1920
IMAGE_MAX_HEIGHT = 1080
IMAGE_QUALITY = 85

# Tamaños de miniaturas
THUMBNAIL_SIZES = {
    'small': (400, 400),
    'medium': (800, 800),
    'large': (1920, 1080),
}

# ──────────────────────────────────────────────────────────────────────────
# 🚀 CONFIGURACIÓN DE RENDIMIENTO ADICIONAL
# ──────────────────────────────────────────────────────────────────────────

# Template loaders para mejor rendimiento en producción
if not DEBUG:
    # Desactivar APP_DIRS cuando se usan loaders personalizados
    TEMPLATES[0]['APP_DIRS'] = False
    TEMPLATES[0]['OPTIONS']['loaders'] = [
        ('django.template.loaders.cached.Loader', [
            'django.template.loaders.filesystem.Loader',
            'django.template.loaders.app_directories.Loader',
        ]),
    ]

# Deshabilitar debug de templates en producción
TEMPLATES[0]['OPTIONS']['debug'] = DEBUG

# ──────────────────────────────────────────────────────────────────────────
# 📁 CONFIGURACIÓN DE LÍMITES DE ARCHIVOS
# ──────────────────────────────────────────────────────────────────────────

# Límites para subida de archivos (en bytes)
# 20MB para imágenes principales/secundarias
DATA_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024  # 20MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024  # 20MB

# Límite para archivos temporales (videos de 200MB)
FILE_UPLOAD_TEMP_DIR = None  # Usar directorio temporal del sistema

# Configuración de archivos temporales
FILE_UPLOAD_PERMISSIONS = 0o644  # Permisos para archivos subidos
FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755  # Permisos para directorios